"""
Django settings for artoftennis project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    "home",
    "ml",
    "videos",
    "images",
    "search",
    "wagtail.contrib.forms",
    "wagtail.contrib.redirects",
    "wagtail.embeds",
    "wagtail.sites",
    "wagtail.users",
    "wagtail.snippets",
    "wagtail.documents",
    "wagtail.images",
    "wagtail.search",
    "wagtail.admin",
    "wagtail",
    "modelcluster",
    "taggit",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'social_django',
    'oauth2_provider',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'wagtailmedia',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "wagtail.contrib.redirects.middleware.RedirectMiddleware",
]

ROOT_URLCONF = "artoftennis.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(PROJECT_DIR, "templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = "artoftennis.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         "NAME": os.getenv('DATABASE_NAME'),
#         "USER": os.getenv('DATABASE_USER'),
#         "PASSWORD": os.getenv('DATABASE_PASSWORD'),
#         "HOST": os.getenv('DATABASE_HOST'),
#         "PORT": os.getenv('DATABASE_PORT', '5432'),
#     }
# }



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, "static"),
]

STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = "/static/"


# Wagtail settings

WAGTAIL_SITE_NAME = "artoftennis"

# Search
# https://docs.wagtail.org/en/stable/topics/search/backends.html
WAGTAILSEARCH_BACKENDS = {
    "default": {
        "BACKEND": "wagtail.search.backends.database",
    }
}

# Base URL to use when referring to full URLs within the Wagtail admin backend -
# e.g. in notification emails. Don't include '/admin' or a trailing slash
WAGTAILADMIN_BASE_URL = "http://example.com"

# Allowed file extensions for documents in the document library.
# This can be omitted to allow all files, but note that this may present a security risk
# if untrusted users are allowed to upload files -
# see https://docs.wagtail.org/en/stable/advanced_topics/deploying.html#user-uploaded-files
WAGTAILDOCS_EXTENSIONS = ['csv', 'docx', 'key', 'odt', 'pdf', 'pptx', 'rtf', 'txt', 'xlsx', 'zip']


##########################
########## CORS ##########
##########################
CORS_ALLOWED_ORIGINS = [
    f"http://{os.getenv('FRONTEND_HOST')}:{os.getenv('FRONTEND_PORT')}",
    "https://your-production-frontend.com",
]

CORS_ALLOW_CREDENTIALS = True
##########################
########## CORS ##########
##########################


##########################
##### REST_FRAMEWORK #####
##########################
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',
    # ),
}
##########################
##### REST_FRAMEWORK #####
##########################


##########################
#### OAUTH2_PROVIDER #####
##########################
OAUTH2_PROVIDER = {
    "PKCE_REQUIRED": False,
    'SCOPES': {
        'read': 'Read access to your data',
        'write': 'Write access to your data',
    }
}
##########################
#### OAUTH2_PROVIDER #####
##########################


##########################
##### SOCIAL_AUTH ########
##########################
AUTHENTICATION_BACKENDS = (
    'social_core.backends.github.GithubOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)
SOCIAL_AUTH_GITHUB_KEY = os.getenv('GITHUB_OAUTH_CLIENT_ID')
SOCIAL_AUTH_GITHUB_SECRET = os.getenv('GITHUB_OAUTH_CLIENT_SECRET')
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/accounts/login/'
##########################
##### SOCIAL_AUTH ########
##########################


##########################
######## Azure ML ########
##########################
RESOURCE_GROUP = os.getenv('ML_RESOURCE_GROUP')
WORKSPACE_NAME = os.getenv('ML_WORKSPACE_NAME')
SUBSCRIPTION_ID = os.getenv('ML_SUBSCRIPTION_ID')
TENANT_ID = os.getenv('ML_TENANT_ID')
CLIENT_ID = os.getenv('ML_CLIENT_ID')
CLIENT_SECRET = os.getenv('ML_CLIENT_SECRET')
##########################
######## Azure ML ########
##########################

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


##########################
##### Wagtail Media ######
##########################

# WAGTAILMEDIA = {
#     "MEDIA_MODEL": "wagtailmedia.Media",
#     "AUDIO_EXTENSIONS": [
#         "aac",
#         "aiff",
#         "flac",
#         "m4a",
#         "m4b",
#         "mp3",
#         "ogg",
#         "wav",
#     ],
#     "VIDEO_EXTENSIONS": [
#         "avi",
#         "h264",
#         "m4v",
#         "mkv",
#         "mov",
#         "mp4",
#         "mpeg",
#         "mpg",
#         "ogv",
#         "webm",
#     ],
# }

##########################
##### Wagtail Media ######
##########################
